GIT commands

1. git --version
2. git config
3. git config --global --list  // to get user name and email (to know which user is making changes)
4. git config --global user.name "indra"  // to set user name
5. git config --global user.email "indrasenareddy0088@gmail.com" //to set user name  

6. git init		// to create local repository .
7. git status   // 

8. rm -rf .git  // to delete local git repository (.git file)

9. git init -b main // when we need to create a main branch which is different from master (default)
10. git add "file path" // to add the file to staging area.
11. git commit -m "message to track"
12. git log // to get all logs of commit

13. git commit -a -m "to skip staging and commit"

14. git diff                 // difference between current working file and file in git (committed)

15 git diff --staged       // difference between current file and staging
16 git rm --cached  "file name" // to remove file from git

17. git clone "git link" -> to copy git data in local

18. echo "# git_java_practice" >> README.md
-> to add to remote repository using ssh.
1. key has to be created with below command 
->ssh-keygen -o // the generated key should be pasted in sshkey in github setting.
->git remote add origin https://github.com/Indra0011/git_java_practice.git // for connection to remote repository using https
-> git remote add origin ygit@github.com:Indra0011/git_java_practice.git                            // for connection to remote repository using ssh
-> git push -u origin main  // push to remote repository

//+++ to create remote repository
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Indra0011/git_java_practice.git
git push -u origin main
//--- to create remote repository

// ++ push existing repository from command line
git remote add origin https://github.com/Indra0011/git_java_practice.git
git branch -M main
git push -u origin main
//-- push existing repository form command line 

-> git remote -v  // get the remote repositories that can be accessed
-> git tag -a  v1.0  -m "message"                    // annotated tag - to specify version for local repo
-> git tag v1.1 -m "message"
-> git show "version"
-> git push origin v1.0  //tag for remote repo
-> git tag               // to get the tags 

//clone project

-> git clone "https link of remote repo"

// create branch
git switch -c "branch name" // to create a branch and switch to this new branch
git switch           - to switch to a different branch
git branch         - to know number of branchess

// delete branch

git branch -d "branch name"

// add the new created branch to git remote repo

git push origin "branch name"

// git branch merge "Feature name"

// to push merged feature to remote rep

git pull origin main // before merge this step has to be performed
git push origin main

// git rebase  - used to merge two branches
 To test rebase
// in main merge test






